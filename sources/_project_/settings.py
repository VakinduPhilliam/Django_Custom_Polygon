"""
Django settings for Mozio Supplier's Customer Polygon 'Service Area'.

 Generated by running 'django-admin startproject'"""



# Build paths inside the project like this: os.path.join(BASE_DIR, ...)


import os

from os.path import join, abspath, normpath, dirname

import warnings



BASE_DIR = dirname(dirname(abspath(__file__)))

PROJECT_ROOT = dirname(abspath(__file__))

DATA_DIR = normpath(os.environ.get('DATA_DIR', join(BASE_DIR, '__data__')))


REDIS_HOST = 'redis'


# Using PostgreSQL as Database

POSTGRES_HOST = os.environ.get('POSTGRES_HOST', '127.0.0.1')


POSTGRES_DB_NAME = os.environ.get('POSTGRES_DB_NAME', 'geodjango')

POSTGRES_USER = os.environ.get('POSTGRES_USER', 'pahaz')

POSTGRES_PASSWORD = os.environ.get('POSTGRES_PASSWORD', '')

POSTGRES_PORT = int(os.environ.get('POSTGRES_PORT', '5432')) 




# Protect Application Data
# SECURITY WARNING: keep the secret key used in production secret!


SECRET_KEY = os.environ.get('SECRET_KEY', 'Q+%ik6z&!yer+ga9m=e%jcqAd21asdAFw2')



# SECURITY WARNING: don't run with debug turned on in production!


DEBUG = os.environ.get('DEBUG', 'true').lower() == 'true'

STATIC_ROOT = os.environ.get('STATIC_ROOT', join(DATA_DIR, 'static'))

MEDIA_DIR = os.environ.get('MEDIA_DIR', join(DATA_DIR, 'media'))


ALLOWED_HOSTS = ['*']




# Application definition



INSTALLED_APPS = (
    
'django.contrib.admin',
    
'django.contrib.auth',
    
'django.contrib.contenttypes',
    
'django.contrib.sessions',
    
'django.contrib.messages',
    
'django.contrib.staticfiles',
    
'django.contrib.gis',

    
'rest_framework',
    
'rest_framework_gis',
    
'djmoney',
    
'phonenumber_field',

    

# apps
    

'geoapi',

)



MIDDLEWARE_CLASSES = (
    
'django.contrib.sessions.middleware.SessionMiddleware',
    
'django.middleware.common.CommonMiddleware',
    
'django.middleware.csrf.CsrfViewMiddleware',
    
'django.contrib.auth.middleware.AuthenticationMiddleware',
    
'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    
'django.contrib.messages.middleware.MessageMiddleware',
    
'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
'django.middleware.security.SecurityMiddleware',

)



ROOT_URLCONF = '_project_.urls'



TEMPLATES = [
    {
        
'BACKEND': 'django.template.backends.django.DjangoTemplates',
        
'DIRS': [
 join(PROJECT_ROOT, 'templates'),
],
        
'APP_DIRS': True,
        
'OPTIONS': {
            
'context_processors': [

'django.template.context_processors.debug',
                
'django.template.context_processors.request',
                
'django.contrib.auth.context_processors.auth',
                
'django.contrib.messages.context_processors.messages',
            
],
        
},
    
},

]



WSGI_APPLICATION = '_project_.wsgi.application'




# Database

# https://docs.djangoproject.com/en/1.8/ref/settings/

#databases


DATABASES = {
    
'default': {
        
'ENGINE': 'django.contrib.gis.db.backends.postgis',
        
'NAME': POSTGRES_DB_NAME,
        
'USER': POSTGRES_USER,
        
'PASSWORD': POSTGRES_PASSWORD,
        
'HOST': POSTGRES_HOST,
        
'PORT': POSTGRES_PORT,
   
 }

}



# Internationalization

# https://docs.djangoproject.com/en/1.8/topics/i18n/



LANGUAGE_CODE = 'en-us'



TIME_ZONE = 'UTC'



USE_I18N = True

USE_L10N = True

USE_TZ = True



# Static files (CSS, JavaScript, Images)

# https://docs.djangoproject.com/en/1.8/howto/static-files/



MEDIA_URL = '/media/'


STATIC_URL = '/static/'

STATICFILES_DIRS = (
os.path.join(PROJECT_ROOT, 'static'),
)



# Testing Framework
# Create testing framework

DRF
REST_FRAMEWORK = {
    

'PAGE_SIZE': 50,
    
'TEST_REQUEST_DEFAULT_FORMAT': 'json',
    
'TEST_REQUEST_RENDERER_CLASSES': (
'rest_framework.renderers.JSONRenderer',
)
}
